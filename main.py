import streamlit as st
import pandas as pd
from sklearn.tree import DecisionTreeClassifier

# ========================
# 1Ô∏è‚É£ Title + Subtitle
# ========================
st.set_page_config(page_title="Samsung Predictor", layout="centered")
st.title("üì± Guess Your Samsung!")
st.subheader("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Samsung ‡∏£‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì")

st.markdown("---")

# ========================
# 2Ô∏è‚É£ ‡πÇ‡∏´‡∏•‡∏î dataset
# ========================
try:
    df = pd.read_pickle("Cleansamsung.pkl")
except:
    # Dataset ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    data = {
        '‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ö‡∏≤‡∏ó)': [0,1,2,3],
        '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å': [1,2,3,4],
        '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á': [1,2,3,1],
        '‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠': [1,2,3,1],
        '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ S Pen': [1,2,1,2],
        '‡∏ä‡∏≠‡∏ö‡∏à‡∏≠‡∏û‡∏±‡∏ö‡πÑ‡∏î‡πâ': [1,2,1,2],
        '‡πÉ‡∏ä‡πâ Samsung ‡∏£‡∏∏‡πà‡∏ô‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô': ['Galaxy A', 'Galaxy S', 'Galaxy Z', 'Galaxy Note']
    }
    df = pd.DataFrame(data)

st.write("üìä Samsung Data Clean")
st.dataframe(df)

# ========================
# 3Ô∏è‚É£ ‡πÅ‡∏¢‡∏Å Features / Target
# ========================
X = df[['‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ö‡∏≤‡∏ó)','‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å','‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á',
        '‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠','‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ S Pen','‡∏ä‡∏≠‡∏ö‡∏à‡∏≠‡∏û‡∏±‡∏ö‡πÑ‡∏î‡πâ']]
y = df['‡πÉ‡∏ä‡πâ Samsung ‡∏£‡∏∏‡πà‡∏ô‡πÑ‡∏´‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô']

# ========================
# 4Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
# ========================
model = DecisionTreeClassifier()
model.fit(X, y)

st.markdown("---")

# ========================
# 5Ô∏è‚É£ Streamlit UI: input
# ========================
st.subheader("üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")

col1, col2, col3 = st.columns(3)
with col1:
    budget = st.number_input("üí∞ ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (0-3)", min_value=0, max_value=3)
    main_use = st.number_input("üñ•Ô∏è ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å (1-4)", min_value=1, max_value=4)
with col2:
    camera = st.number_input("üì∑ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á (1-3)", min_value=1, max_value=3)
    screen = st.number_input("üì∫ ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (1-3)", min_value=1, max_value=3)
with col3:
    s_pen = st.number_input("‚úèÔ∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ S Pen (1-2)", min_value=1, max_value=2)
    foldable = st.number_input("üìê ‡∏ä‡∏≠‡∏ö‡∏à‡∏≠‡∏û‡∏±‡∏ö‡πÑ‡∏î‡πâ (1-2)", min_value=1, max_value=2)

st.markdown("<br>", unsafe_allow_html=True)

# ========================
# 6Ô∏è‚É£ ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
# ========================
if st.button("üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ Samsung ‡∏£‡∏∏‡πà‡∏ô", use_container_width=True):
    user_input = pd.DataFrame({
        '‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ö‡∏≤‡∏ó)': [budget],
        '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å': [main_use],
        '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡πâ‡∏≠‡∏á': [camera],
        '‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠': [screen],
        '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ S Pen': [s_pen],
        '‡∏ä‡∏≠‡∏ö‡∏à‡∏≠‡∏û‡∏±‡∏ö‡πÑ‡∏î‡πâ': [foldable]
    })
    predicted_model = model.predict(user_input)
    
    st.markdown("---")
    st.success(f"üéâ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ Samsung ‡∏£‡∏∏‡πà‡∏ô: **{predicted_model[0]}**", icon="‚úÖ")